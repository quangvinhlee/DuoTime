name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Markdown linting
        run: npx markdownlint-cli "**/*.md" --fix --ignore "node_modules/**/*.md" --ignore "dist/**/*.md" --ignore "build/**/*.md" --ignore ".git/**/*.md"

      - name: Run Spell checking
        run: npx cspell "**/*.{md,ts,tsx,js,jsx,json}" --ignore "node_modules/**" --ignore "dist/**" --ignore "build/**" --ignore ".git/**"

      - name: Check code formatting
        run: npx prettier --check "**/*.{md,ts,tsx,js,jsx,json,yml,yaml}" --ignore-path .gitignore

      - name: Run ESLint on affected files
        run: npx nx affected --target=lint --parallel=3

  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    needs: static-analysis

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: duotime_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup environment
        run: |
          cd apps/backend
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/duotime_test" > .env.test
          echo "REDIS_HOST=localhost" >> .env.test
          echo "REDIS_PORT=6379" >> .env.test
          echo "JWT_SECRET=test-secret-key" >> .env.test
          echo "ENCRYPTION_KEY=test-encryption-key-32-chars" >> .env.test

      - name: Run database migrations
        run: npx nx run backend:db:generate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/duotime_test

      - name: Run affected tests
        run: npx nx affected --target=test --parallel=3
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/duotime_test
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          JWT_SECRET: test-secret-key
          ENCRYPTION_KEY: test-encryption-key-32-chars

  mobile-tests:
    name: Mobile Tests
    runs-on: ubuntu-latest
    needs: static-analysis

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript check
        run: |
          cd apps/mobile
          npx tsc --noEmit

      - name: Run GraphQL codegen check
        run: npx nx run mobile:codegen

      - name: Run affected tests
        run: npx nx affected --target=test --parallel=3

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [static-analysis, backend-tests, mobile-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build affected projects
        run: npx nx affected --target=build --parallel=3

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: static-analysis

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          npm audit --audit-level moderate
          cd apps/backend && npm audit --audit-level moderate
          cd ../mobile && npm audit --audit-level moderate
